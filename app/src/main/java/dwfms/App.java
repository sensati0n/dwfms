/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dwfms;

import dwfms.collaboration.ethereum.EthereumCollaborationConnector;
import dwfms.collaboration.simple.SimpleConnector;
import dwfms.framework.*;
import dwfms.framework.collaboration.BaseCollaboration;
import dwfms.framework.collaboration.security.Utils;
import dwfms.framework.references.Instance;
import dwfms.framework.references.UserReference;
import dwfms.model.bpmn.BPMNModel;
import dwfms.model.BPMNToHybridExecutionMachineTransformer;
import dwfms.ui.HttpInterface;

import java.io.IOException;
import java.security.KeyPair;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import java.util.concurrent.TimeUnit;

public class App {

    public static void main(String[] args) throws InterruptedException, NoSuchAlgorithmException, IOException {

        System.out.println("User: " + args[0]);
        System.out.println("Port: " + args[1]);

        User hans = new User(new UserReference("hans"), null, null);

//        if(args[0].equals("hans")) {
//             simple(Integer.parseInt(args[1])+1);
//        }
//        else {
            DWFMS dWFMS = setupSampleDWFMS(hans, Integer.parseInt(args[1])+1);
            HttpInterface httpInterface = new HttpInterface(dWFMS, Integer.parseInt(args[1]));
//        }


        // ethereum();

    }

    static void ethereum() throws InterruptedException {

        User user = new User(new UserReference("hans"), "0xE076df4e49182f0AB6f4B98219F721Cccc38f9be", "0x5305148f9378f0f0d164f28f4fc7fa11469bbd0245c6eac2a3ec75444602a479");

        IModel model = new BPMNModel();
        ITransformer transformer = new BPMNToHybridExecutionMachineTransformer();
        BaseCollaboration collaboration = new EthereumCollaborationConnector(user.getPublicKey());

        DWFMS dWFMS = DWFMS.builder()
                .model(model)
                .transformer(transformer)
                .collaboration(collaboration)
                .build();

        dWFMS.init(user);

        Instance reference = dWFMS.deployProcessModel();
        System.out.println("Contract Address: " + reference.getInstanceRef());
        // InstanceReference reference = new InstanceReference("0xb709b82a554f07c7916109a0f55D0D6c995DBcc9");

        //dWFMS.getMyWorklist(instance);
        dWFMS.executeTask(new TaskExecution(reference, "A"));
        TimeUnit.SECONDS.sleep(2);
        dWFMS.executeTask(new TaskExecution(reference, "C"));

    }

    static void simple(int port) throws InterruptedException, NoSuchAlgorithmException {

        //KeyPair keyPair = Utils.keyGen(128);
        User user = new User(new UserReference("hans"), null, null); //Utils.keyToString(keyPair.getPublic()), Utils.keyToString(keyPair.getPrivate()));

        DWFMS dWFMS = setupSampleDWFMS(user, port);

        Instance instance = dWFMS.deployProcessModel();

        TimeUnit.SECONDS.sleep(2);
        dWFMS.executeTask(new TaskExecution(instance, "Start"));

        TimeUnit.SECONDS.sleep(2);
        dWFMS.executeTask(new TaskExecution(instance, "A"));

        TimeUnit.SECONDS.sleep(2);
        dWFMS.executeTask(new TaskExecution(instance, "C"));

    }

    private static DWFMS setupSampleDWFMS(User user, int port) {

        IModel model = new BPMNModel();
        ITransformer transformer = new BPMNToHybridExecutionMachineTransformer();
        BaseCollaboration collaboration = new SimpleConnector(port, List.of("http://localhost:3001/", "http://localhost:4001/"));

        DWFMS dWFMS = DWFMS.builder()
                .model(model)
                .transformer(transformer)
                .collaboration(collaboration)
                .build();

        dWFMS.init(user);

        return dWFMS;
    }



}
